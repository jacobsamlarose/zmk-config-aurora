/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/led/led.h>

#define BT0 BT_SEL 0
#define BT1 BT_SEL 1
#define BT2 BT_SEL 2
#define BT3 BT_SEL 3
#define BT4 BT_SEL 4
// #define MO_TOG(layer) &mo_tog layer layer   // Macro to apply momentary-layer-on-hold/toggle-layer-on-tap to a specific layer

&led_strip {
    chain-length = <18>;
};

&mt {
    tapping-term-ms = <300>;
};

/ {
	chosen {
		zmk,underglow = &led_strip;
	};
};

    &caps_word {
        continue-list = <UNDERSCORE MINUS SPACE BACKSPACE>;
    };

/ {

    combos {
         compatible = "zmk,combos";

	combo_appswitch {
           timeout-ms = <5000>;
           key-positions = <37 41>;
           bindings = <&kp LG(TAB)>;
         };

	combo_ques {
           timeout-ms = <1000>;
           key-positions = <33 34>;
	   layers = <0>;
           bindings = <&kp QMARK>;
         };

	combo_capz {
           timeout-ms = <1000>;
           key-positions = <25 26>;
	   layers = <0>;
           bindings = <&kp LS(Z)>;
         };

	combo_qetab {
           timeout-ms = <2000>;
           key-positions = <1 3>;
           bindings = <&kp TAB>;
         };
	 	 
	combo_equals_l {
           timeout-ms = <2000>;
           key-positions = <25 29>;
	   layers = <2>;
           bindings = <&kp KP_EQUAL>;
         };
     
     	combo_equals_r {
           timeout-ms = <2000>;
           key-positions = <34 29>;
           layers = <2>;
           bindings = <&kp KP_EQUAL>;
         };

	combo_btclear {
           timeout-ms = <2000>;
           key-positions = <21 22>;
           layers = <3>;
           bindings = <&bt BT_CLR>;
         };

	combo_outtog {
           timeout-ms = <2000>;
           key-positions = <33 34>;
           layers = <3>;
           bindings = <&out OUT_TOG>;
         };
         
        combo_tog2 {
           timeout-ms = <500>;
           key-positions = <39 41>;
           bindings = <&tog 2>;
         };
         
        combo_tog1 {
           timeout-ms = <500>;
           key-positions = <39 40>;
           bindings = <&tog 1>;
         };
         
        combo_tog3 {
           timeout-ms = <800>;
           key-positions = <39 40 41>;
           bindings = <&tog 3>;
         };
         
        combo_hyper {
           timeout-ms = <800>;
           key-positions = <19 20 21>;
           bindings = <&sk LG(LS(LA(LCTRL)))>;
         };

	combo_lpar {
           timeout-ms = <300>;
           key-positions = <4 5>;
           bindings = <&kp LPAR>;
         };
		
	combo_rpar {
           timeout-ms = <300>;
           key-positions = <6 7>;
           bindings = <&kp RPAR>;
         };
		
	combo_lbkt {
           timeout-ms = <300>;
           key-positions = <16 17>;
           bindings = <&kp LBKT>;
         };
		
	combo_rbkt {
           timeout-ms = <300>;
           key-positions = <18 19>;
           bindings = <&kp RBKT>;
         };
		
	combo_lbrc {
           timeout-ms = <300>;
           key-positions = <28 29>;
           bindings = <&kp LBRC>;
         };
		
	combo_rbrc {
           timeout-ms = <300>;
           key-positions = <30 31>;
           bindings = <&kp RBRC>;
         };
     };
     
     behaviors {

	hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <500>;
            bindings = <&kp CAPS>, <&caps_word>;
        };
	
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R       |    T     |   |  Y  |  U   |  I  |  O  |  P  | BKSP      |
// | CAPS |  A  |  S  |  D  |  F       |    G     |   |  H  |  J   |  K  |  L  |  ;  |  '        |
// | SHFT |  Z  |  X  |  C  |  V       |    B     |   |  N  |  M   |  ,  |  .  |  /  | SHFT/CAPW |
//                    | ALT (ESC) | CMD (ALT) | CTL(ENT) |   | SPC | FN2  | FN1 |
                        bindings = <
   &none   &kp Q    		&kp W    	&kp E       	&kp R      	&kp T          	&kp Y   &kp U    	&kp I       &kp O    &kp P     	&none
   &none   &kp A    		&kp S    	&kp D       	&hm LGUI F      &kp G          	&kp H   &hm RGUI J    	&kp K       &kp L    &kp SQT  	&none
   &none   &mt LSHIFT Z    	&kp X    	&kp C       	&kp V      	&kp B          	&kp N   &kp M    	&kp COMMA   &kp DOT  &mt RSHFT FSLH  	&none
                                &mt LALT ESC    &mt LGUI TAB  	&mt LCTRL RET  	&lt 2 SPACE	&mo 1	&td0
                        >;
                };
                nav_layer {
// -----------------------------------------------------------------------------------------
// |   TAB |  1  |  2  |  3  |  4  |    5     |   |  6  |  7  |  8   |   9  |   0   | BKSP      |
// | EJECT |  4  |  5  |  6  |  `  |    -     |   |     |     |      |  UP  |   \   |   `       |
// |  SHFT |  7  |  8  |  9  |  0  |    =     |   |     |     | LEFT | DOWN | RIGHT | SHFT/CAPW |
//                     | ALT | CMD | CTL(ENT) |   | SPC | FN3 |  FN1 |
                        bindings = <
   &none	&kp TAB  	&kp EXCL	&kp AT   	&kp LPAR      	&kp RPAR      	&kp TILDE 	&none   	&kp PIPE    &none	&kp BSPC   	&none    
   &none	&kp SEMI  	&kp DLLR	&kp PRCNT  	&kp CARET   	&kp MINUS	&none		&none		&kp UP      &kp GRAVE	&kp SEMI	&none       
   &none	&mt LSHIFT N7 	&kp AMPS	&kp STAR  	&kp NUHS	&kp PLUS	&none		&kp LEFT    	&kp DOWN    &kp RIGHT   &mt RSHFT BSLH	&none
                                		&trans  	&trans		&trans		&kp SPACE   	&trans   	&kp C_EJECT
                        >;
                };

		num_layer {
// -----------------------------------------------------------------------------------------
// |    |  1  |  2  |  3  |  4  |    5     |   |  6  |  7  |  8   |   9  |   0   | BKSP      |
// |    |  4  |  5  |  6  |  `  |    -     |   |     |     |      |  UP  |   \   |   `       |
// |    |  7  |  8  |  9  |  0  |    =     |   |     |     | LEFT | DOWN | RIGHT | SHFT/CAPW |
//                     | ALT | CMD | CTL(ENT) |   | SPC | FN3 |  FN1 |
                        bindings = <
   &none	&kp TAB    	&kp EXCL	&kp AT   	&kp HASH    	&kp COLON	&kp LBRC	&kp N1  &kp N2  &kp N3	&kp BSPC   	&none    
   &none	&kp SEMI  	&kp DLLR	&kp PRCNT  	&kp CARET  	&kp MINUS      	&kp LBKT 	&kp N4  &kp N5	&kp N6	&kp SEMI	&none       
   &none	&kp LSHFT    	&kp AMPS	&kp STAR  	&kp NUHS	&kp PLUS  	&kp LPAR  	&kp N7 	&kp N8	&kp N9  &mt RSHFT N0	&none
                                &trans  	&trans		&trans		&kp SPACE   	&trans  	&kp C_EJECT
                        >;
                };
		
		board_layer {
// -----------------------------------------------------------------------------------------
// | ESC     | PRVS  | RWND  | PLAY  	| MFFD    | NEXT    |   | BT1     | BT2   | BT3   | BT4   | BT5   | BT_CLR  |
// | RGB_TOG | BRI + | HUE + | SAT + 	| EFF +   | VOL+    |   |         |       |       |       |       | OUT_TOG |
// |         | BRI - | HUE - | SAT - 	| EFF -   | VOL-    |   |   	  |       |       |       |       |         |
//                           | PWR_OFF  | PWR_OFF | PWR_TOG	| 	| 		  |       |       |
                        bindings = <
   &none        &kp C_PREV       &kp C_RW         &kp C_PP          &kp C_FF		&kp C_NEXT		&bt BT0 &bt BT1	&bt BT2 &bt BT3	&bt BT4	&none
   &none  	&rgb_ug RGB_BRI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI   &rgb_ug RGB_EFF	&kp C_VOL_UP		&none  	&none   &none	&none	&none	&none	 
   &none     	&rgb_ug RGB_BRD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD   &rgb_ug RGB_EFR	&kp C_VOL_DN		&none	&none   &none  	&none	&none	&none	 
                                        &ext_power EP_OFF &ext_power EP_ON		&ext_power EP_TOG  	&trans  &trans  &rgb_ug RGB_TOG
                        >;
                };
		
        };
};
